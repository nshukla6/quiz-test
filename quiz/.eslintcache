[{"/Users/nitin.shukla/Documents/work/test/quiz/src/index.js":"1","/Users/nitin.shukla/Documents/work/test/quiz/src/App.js":"2","/Users/nitin.shukla/Documents/work/test/quiz/src/api.js":"3","/Users/nitin.shukla/Documents/work/test/quiz/src/components/Boolean.jsx":"4","/Users/nitin.shukla/Documents/work/test/quiz/src/components/Text.jsx":"5","/Users/nitin.shukla/Documents/work/test/quiz/src/components/Multiple.jsx":"6","/Users/nitin.shukla/Documents/work/test/quiz/src/components/Summary.jsx":"7"},{"size":148,"mtime":1612252441583,"results":"8","hashOfConfig":"9"},{"size":2428,"mtime":1612429386991,"results":"10","hashOfConfig":"9"},{"size":205,"mtime":1612255229163,"results":"11","hashOfConfig":"9"},{"size":1285,"mtime":1612429399327,"results":"12","hashOfConfig":"9"},{"size":780,"mtime":1612428993693,"results":"13","hashOfConfig":"9"},{"size":1290,"mtime":1612428993693,"results":"14","hashOfConfig":"9"},{"size":953,"mtime":1612338788410,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"12ms8ht",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/nitin.shukla/Documents/work/test/quiz/src/index.js",[],["33","34"],"/Users/nitin.shukla/Documents/work/test/quiz/src/App.js",["35"],"import React, { useEffect, useState, useCallback } from 'react';\nimport { getQuestions } from \"./api\";\nimport Boolean from './components/Boolean';\nimport Multiple from './components/Multiple';\nimport Text from './components/Text';\nimport Summary from './components/Summary';\n\nimport \"./App.css\";\n\n\nconst NO_OF_QUESTIONS = 5;\n\nconst App = () => {\n\n    const [questions, setQuestions] = useState([]);\n    const [randomQuestions, setRandomQuestions] = useState([]);\n    const [summary, setSummary] = useState([]);\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            try {\n                const response = await getQuestions();\n                const questions = response.results;\n                setQuestions(questions);\n\n            } catch (e) {\n                console.log(\"Error Fetching Questions \", e);\n            }\n\n        }\n        fetchQuestions();\n    }, [setQuestions]);\n\n    useEffect(() => {\n        if (questions.length > 0) {\n            randomQuestionGenerator();\n        }\n\n    }, [questions])\n\n    const randomGenerator = (min, max) => {\n        const result = [];\n        for (let i = 0; i < NO_OF_QUESTIONS; i++) {\n            const index = Math.floor(Math.random() * (max - min) + min);\n            result.push(index);\n        }\n        return result;\n    }\n    const randomQuestionGenerator = useCallback(() => {\n        const ques = [];\n        const randomArray = randomGenerator(0, questions.length);\n        for (let i = 0; i < randomArray.length; i++) {\n            ques.push(questions[randomArray[i]]);\n        }\n\n        setRandomQuestions(ques);\n    },[questions])\n\n    const showQuestion = (question) => {\n        if (question.type === \"multiple\") {\n            return <Multiple question={question} next={clickNext} />\n        } else if (question.type === \"boolean\") {\n            return <Boolean question={question} next={clickNext} />\n        } else if (question.type === \"text\") {\n            return <Text question={question} next={clickNext} />\n        }\n    }\n\n    const clickNext = (ans) => {\n        setSummary(sum => [...sum,ans]);\n    }\n\n    const restartQuiz = () => {\n        randomQuestionGenerator();\n        setSummary([]);\n    }\n\n    return (\n        <div className=\"question\">\n            {randomQuestions.length > 0 ? showQuestion(randomQuestions.shift()) : <Summary summary={summary} restart={restartQuiz} />}\n        </div>\n    )\n}\n\nexport default App\n","/Users/nitin.shukla/Documents/work/test/quiz/src/api.js",[],"/Users/nitin.shukla/Documents/work/test/quiz/src/components/Boolean.jsx",[],"/Users/nitin.shukla/Documents/work/test/quiz/src/components/Text.jsx",[],["36","37"],"/Users/nitin.shukla/Documents/work/test/quiz/src/components/Multiple.jsx",[],"/Users/nitin.shukla/Documents/work/test/quiz/src/components/Summary.jsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":39,"column":8,"nodeType":"44","endLine":39,"endColumn":19,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomQuestionGenerator'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [questions, randomQuestionGenerator]",{"range":"53","text":"54"},[1024,1035],"[questions, randomQuestionGenerator]"]